/*
 * Copyright (c) 2024 University of California, Riverside.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import net.ltgt.gradle.errorprone.CheckSeverity

plugins {
    id 'java'
    id "net.ltgt.errorprone" version "2.0.1"
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "com.uber.nullaway:nullaway:0.10.10"
    // Add annotator scanner
    annotationProcessor "edu.ucr.cs.riple.annotator:annotator-scanner:1.3.15"

    // add required annotation dependencies
    // Initializer
    compileOnly 'com.uber.nullaway:nullaway-annotations:0.10.10'
    // Nullable annotations
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    // JSpecify annotations for NullUnmarked
    compileOnly "org.jspecify:jspecify:0.3.0"

    annotationProcessor "com.uber.nullaway:nullaway:0.10.10"
    errorprone "com.google.errorprone:error_prone_core:2.4.0"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"
}

def scanner_config_path = "${project.projectDir.absolutePath}/annotator-out/scanner.xml"
def nullaway_config_path = "${project.projectDir.absolutePath}/annotator-out/nullaway.xml"


tasks.withType(JavaCompile).configureEach {
    if (!name.toLowerCase().contains("test")) {
        options.errorprone {
            check("NullAway", CheckSeverity.ERROR)
            check("AnnotatorScanner", CheckSeverity.ERROR)
            option("NullAway:AnnotatedPackages", "com.example")
            option("NullAway:SerializeFixMetadata", "true")
            option("NullAway:FixSerializationConfigPath", nullaway_config_path)
            option("AnnotatorScanner:ConfigPath", scanner_config_path)
        }
        options.compilerArgs << "-Xmaxerrs" << "100000"
        options.compilerArgs << "-Xmaxwarns" << "100000"
    }
}
